<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.tangue.templateenginee.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="cn.tangue.templateenginee.model.Article">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="cn.tangue.templateenginee.model.Article"
            useGeneratedKeys="true">
        insert into article (author, title, content, create_time)
        values (#{author,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,author,title,content,create_time from article
    </select>
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id,author,title,content,create_time from article where id=#{id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
        delete from article where id=#{id,jdbcType=INTEGER}
    </delete>
    <update id="update" parameterType="cn.tangue.templateenginee.model.Article">
        update article
        set author = #{author,jdbcType=VARCHAR},
          title = #{title,jdbcType=VARCHAR},
          content = #{content,jdbcType=VARCHAR},
          create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>